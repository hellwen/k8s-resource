kind: Service
apiVersion: v1
metadata:
  name: zookeeper
  namespace: development
  labels:
    app: zookeeper
spec:
  clusterIP: None
  ports:
  - port: 2122
    name: ssh
  - port: 2181
    name: zk
  - port: 2191
    name: peer
  - port: 2192
    name: leader-election
  selector:
    app: zk
---
apiVersion: apps/v1alpha1
kind: PetSet
metadata:
  name: zk
  namespace: development
spec:
  replicas: 3
  serviceName: "zookeeper"
  template:
    metadata:
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
      labels:
        app: zk
    spec:
      nodeSelector:
        type: virtual
      terminationGracePeriodSeconds: 0
      containers:
      - name: zk
        image: 10.0.12.203:32000/zookeeper:3.4.9.001
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
        ports:
        # ssh
        - containerPort: 2122
        # zk
        - containerPort: 2181
        # peer
        - containerPort: 2191
        # leader-election
        - containerPort: 2192
        args:
        - -d
        env:
        - name: ZK_CLUSTER_DNS
          value: "zookeeper.development.svc.zeusis.com"
        - name: ZK_SERVER_NAME
          value: "zk"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: ssh-key
          mountPath: /.ssh
          readOnly: true
#        - name: zk-data
#          mountPath: /data
      volumes:
      - name: ssh-key
        secret:
          secretName: ssh-key 
          items:
          - key: authorized-keys
            path: authorized_keys
#  volumeClaimTemplates:
#  - metadata:
#      name: zk-data
#    spec:
#      accessModes:
#      - ReadWriteOnce
#      resources:
#        requests:
#          storage: 1Gi
